'''
=================================================
Graded Challenge 1

Nama  : Catherine Helenna Mulyadi
Batch : RMT-027

This program creates a shopping cart which has the following features:
1. Add items the user wants to put into the cart.
2. Remove the items from the cart.
3. Show all the items inside the shopping cart.
4. Calculating the total money spent on the items in the cart.
5. Exit: get out from the program.
=================================================
'''

class CartItem():
    """
    This class aimed to sort the input values from user: (name of the item, price of the item).
    1. Used the method __init__ to define the input values.
    2. The output will be printed out in format:
    Barang "name of the item" berhasil masuk ke dalam keranjang.
    """
    def __init__(self, name, value):
        self.item_name = name
        self.item_value = value
    
    def __str__(self):
        return f"""
    Barang "{self.item_name}" berhasil dimasukkan ke dalam keranjang.
    """

class ShoppingCart():
    """ 
    
    WHAT IS EVERYTHING HERE IS ABOUT?
    
    This class aimed to provide different features for the main program.

    1. The method add_item(self, cartitem) allows the user to add the input values processed in CartItem()
    into the empty list called self.shoppingcart for further processes. This is to facilitate the user when
    they choose option "1".

    2. The method delete_item(self, barang_hapus) allows the user to delete the existing item in the list
    self.shoppingcart. the argument "barang_hapus" acts as the input for the name of the item to be deleted.
    There is a try-except section which is useful to give proper feedback to user when he/she/they input
    incorrect values rather than showing an "error" or a crash. This is to facilitate the user when they choose 
    option "2".
    
    3. The method show_cart(self) aims to print the stored items in self.shoppingcart in a format of for example:
    0. banana - Rp. 3000. This is to facilitate the user when they choose option "3".

    4. The method total_amount(self) is used to calculate the total amount of purchase for the items based on the
    collected values in the self.shoppingcart. The output would be in form:

    Total belanja: Rp. 3000.00

    This is to facilitate the user when they choose option "4".

    Since we are going to test this program in catherine_test.py file, we have to use:
    if __name__ == "__main__":
    then, use try - except to avoid undesirable crash when program is error.
    in between try - except, use looping function: while True to let the program running
    until the user chooses option "5. Exit"
    """
    def __init__(self):
        self.shoppingcart = []
    
    # to add an item into a cart
    def add_item(self, cartitem):
        self.shoppingcart.append(cartitem)
        print(f"""Barang "{cartitem.item_name}" berhasil dimasukkan ke dalam keranjang.""")
        return cartitem
    
    # to delete an item into a cart
    def delete_item(self,barang_hapus):
        flag = False
        for item in self.shoppingcart:
            if item.item_name == barang_hapus:
                flag = True
                self.shoppingcart.remove(item)
                break
        # to anticipate error input values from user
        try:
            if flag == True:
                print(f"Barang {barang_hapus} berhasil dihapus dari keranjang belanja.")
            else:
                raise Exception("Barang tidak ditemukan")
        except:
            print("Error")


    # show the items inside the cart  
    def show_cart(self):
        print("Barang di keranjang: ")
        counter = 0
        for item in self.shoppingcart:
            # printing by listing
            print(f"{counter}. {item.item_name} - Rp. {item.item_value}")
            counter += 1

    # check total shopping amount
    def total_amount(self):
        collect = []
        for item in self.shoppingcart:
            add = int(item.item_value)
            collect.append(add)
        total = sum((collect))
        print(f"Total belanja: Rp.{'%.2f' %total}")  

            
# main program
if __name__ == "__main__":
    shop_cart = ShoppingCart()
    print("Selamat Datang di Keranjang Belanja Toko Makmur ")
    try:
        while True:
            print("")
            print("Menu: ")
            print("1. Menambah Barang")
            print("2. Menghapus Barang")
            print("3. Tampilkan Barang di Keranjang")
            print("4. Lihat Total Belanja")
            print("5. Exit")
            print("")
            user_input = input("Pilihan: ")
            print("")
            if user_input == "1":
                masukan_barang = input("Masukan nama barang: ")
                masukan_harga = input("Masukan harga: ")
                cartitem = CartItem(masukan_barang, masukan_harga)
                shop_cart.add_item(cartitem)
            elif user_input == "2":
                barang_hapus = input("Masukan nama barang yang ingin dihapus: ")
                shop_cart.delete_item(barang_hapus)
            elif user_input == "3":
                shop_cart.show_cart()
            elif user_input =="4":
                shop_cart.total_amount()
            elif user_input == "5":
                print("Sampai Jumpa! Terima kasih sudah belanja di Toko Makmur.")
                break
    except:
        print("Pilihannya salah. Coba lagi ya.")



